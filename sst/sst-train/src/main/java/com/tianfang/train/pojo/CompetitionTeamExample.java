package com.tianfang.train.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CompetitionTeamExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sst_competition_team
     *
     * @mbggenerated Mon Feb 01 11:07:44 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sst_competition_team
     *
     * @mbggenerated Mon Feb 01 11:07:44 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sst_competition_team
     *
     * @mbggenerated Mon Feb 01 11:07:44 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sst_competition_team
     *
     * @mbggenerated Mon Feb 01 11:07:44 CST 2016
     */
    public CompetitionTeamExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sst_competition_team
     *
     * @mbggenerated Mon Feb 01 11:07:44 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sst_competition_team
     *
     * @mbggenerated Mon Feb 01 11:07:44 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sst_competition_team
     *
     * @mbggenerated Mon Feb 01 11:07:44 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sst_competition_team
     *
     * @mbggenerated Mon Feb 01 11:07:44 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sst_competition_team
     *
     * @mbggenerated Mon Feb 01 11:07:44 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sst_competition_team
     *
     * @mbggenerated Mon Feb 01 11:07:44 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sst_competition_team
     *
     * @mbggenerated Mon Feb 01 11:07:44 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sst_competition_team
     *
     * @mbggenerated Mon Feb 01 11:07:44 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sst_competition_team
     *
     * @mbggenerated Mon Feb 01 11:07:44 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sst_competition_team
     *
     * @mbggenerated Mon Feb 01 11:07:44 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sst_competition_team
     *
     * @mbggenerated Mon Feb 01 11:07:44 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompIdIsNull() {
            addCriterion("comp_id is null");
            return (Criteria) this;
        }

        public Criteria andCompIdIsNotNull() {
            addCriterion("comp_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompIdEqualTo(String value) {
            addCriterion("comp_id =", value, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdNotEqualTo(String value) {
            addCriterion("comp_id <>", value, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdGreaterThan(String value) {
            addCriterion("comp_id >", value, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdGreaterThanOrEqualTo(String value) {
            addCriterion("comp_id >=", value, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdLessThan(String value) {
            addCriterion("comp_id <", value, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdLessThanOrEqualTo(String value) {
            addCriterion("comp_id <=", value, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdLike(String value) {
            addCriterion("comp_id like", value, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdNotLike(String value) {
            addCriterion("comp_id not like", value, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdIn(List<String> values) {
            addCriterion("comp_id in", values, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdNotIn(List<String> values) {
            addCriterion("comp_id not in", values, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdBetween(String value1, String value2) {
            addCriterion("comp_id between", value1, value2, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdNotBetween(String value1, String value2) {
            addCriterion("comp_id not between", value1, value2, "compId");
            return (Criteria) this;
        }

        public Criteria andTeamIdIsNull() {
            addCriterion("team_id is null");
            return (Criteria) this;
        }

        public Criteria andTeamIdIsNotNull() {
            addCriterion("team_id is not null");
            return (Criteria) this;
        }

        public Criteria andTeamIdEqualTo(String value) {
            addCriterion("team_id =", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdNotEqualTo(String value) {
            addCriterion("team_id <>", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdGreaterThan(String value) {
            addCriterion("team_id >", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdGreaterThanOrEqualTo(String value) {
            addCriterion("team_id >=", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdLessThan(String value) {
            addCriterion("team_id <", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdLessThanOrEqualTo(String value) {
            addCriterion("team_id <=", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdLike(String value) {
            addCriterion("team_id like", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdNotLike(String value) {
            addCriterion("team_id not like", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdIn(List<String> values) {
            addCriterion("team_id in", values, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdNotIn(List<String> values) {
            addCriterion("team_id not in", values, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdBetween(String value1, String value2) {
            addCriterion("team_id between", value1, value2, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdNotBetween(String value1, String value2) {
            addCriterion("team_id not between", value1, value2, "teamId");
            return (Criteria) this;
        }

        public Criteria andWinIsNull() {
            addCriterion("win is null");
            return (Criteria) this;
        }

        public Criteria andWinIsNotNull() {
            addCriterion("win is not null");
            return (Criteria) this;
        }

        public Criteria andWinEqualTo(Integer value) {
            addCriterion("win =", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinNotEqualTo(Integer value) {
            addCriterion("win <>", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinGreaterThan(Integer value) {
            addCriterion("win >", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinGreaterThanOrEqualTo(Integer value) {
            addCriterion("win >=", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinLessThan(Integer value) {
            addCriterion("win <", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinLessThanOrEqualTo(Integer value) {
            addCriterion("win <=", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinIn(List<Integer> values) {
            addCriterion("win in", values, "win");
            return (Criteria) this;
        }

        public Criteria andWinNotIn(List<Integer> values) {
            addCriterion("win not in", values, "win");
            return (Criteria) this;
        }

        public Criteria andWinBetween(Integer value1, Integer value2) {
            addCriterion("win between", value1, value2, "win");
            return (Criteria) this;
        }

        public Criteria andWinNotBetween(Integer value1, Integer value2) {
            addCriterion("win not between", value1, value2, "win");
            return (Criteria) this;
        }

        public Criteria andDrawIsNull() {
            addCriterion("draw is null");
            return (Criteria) this;
        }

        public Criteria andDrawIsNotNull() {
            addCriterion("draw is not null");
            return (Criteria) this;
        }

        public Criteria andDrawEqualTo(Integer value) {
            addCriterion("draw =", value, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawNotEqualTo(Integer value) {
            addCriterion("draw <>", value, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawGreaterThan(Integer value) {
            addCriterion("draw >", value, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawGreaterThanOrEqualTo(Integer value) {
            addCriterion("draw >=", value, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawLessThan(Integer value) {
            addCriterion("draw <", value, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawLessThanOrEqualTo(Integer value) {
            addCriterion("draw <=", value, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawIn(List<Integer> values) {
            addCriterion("draw in", values, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawNotIn(List<Integer> values) {
            addCriterion("draw not in", values, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawBetween(Integer value1, Integer value2) {
            addCriterion("draw between", value1, value2, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawNotBetween(Integer value1, Integer value2) {
            addCriterion("draw not between", value1, value2, "draw");
            return (Criteria) this;
        }

        public Criteria andLoseIsNull() {
            addCriterion("lose is null");
            return (Criteria) this;
        }

        public Criteria andLoseIsNotNull() {
            addCriterion("lose is not null");
            return (Criteria) this;
        }

        public Criteria andLoseEqualTo(Integer value) {
            addCriterion("lose =", value, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseNotEqualTo(Integer value) {
            addCriterion("lose <>", value, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseGreaterThan(Integer value) {
            addCriterion("lose >", value, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseGreaterThanOrEqualTo(Integer value) {
            addCriterion("lose >=", value, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseLessThan(Integer value) {
            addCriterion("lose <", value, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseLessThanOrEqualTo(Integer value) {
            addCriterion("lose <=", value, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseIn(List<Integer> values) {
            addCriterion("lose in", values, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseNotIn(List<Integer> values) {
            addCriterion("lose not in", values, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseBetween(Integer value1, Integer value2) {
            addCriterion("lose between", value1, value2, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseNotBetween(Integer value1, Integer value2) {
            addCriterion("lose not between", value1, value2, "lose");
            return (Criteria) this;
        }

        public Criteria andGoalInIsNull() {
            addCriterion("goal_in is null");
            return (Criteria) this;
        }

        public Criteria andGoalInIsNotNull() {
            addCriterion("goal_in is not null");
            return (Criteria) this;
        }

        public Criteria andGoalInEqualTo(Integer value) {
            addCriterion("goal_in =", value, "goalIn");
            return (Criteria) this;
        }

        public Criteria andGoalInNotEqualTo(Integer value) {
            addCriterion("goal_in <>", value, "goalIn");
            return (Criteria) this;
        }

        public Criteria andGoalInGreaterThan(Integer value) {
            addCriterion("goal_in >", value, "goalIn");
            return (Criteria) this;
        }

        public Criteria andGoalInGreaterThanOrEqualTo(Integer value) {
            addCriterion("goal_in >=", value, "goalIn");
            return (Criteria) this;
        }

        public Criteria andGoalInLessThan(Integer value) {
            addCriterion("goal_in <", value, "goalIn");
            return (Criteria) this;
        }

        public Criteria andGoalInLessThanOrEqualTo(Integer value) {
            addCriterion("goal_in <=", value, "goalIn");
            return (Criteria) this;
        }

        public Criteria andGoalInIn(List<Integer> values) {
            addCriterion("goal_in in", values, "goalIn");
            return (Criteria) this;
        }

        public Criteria andGoalInNotIn(List<Integer> values) {
            addCriterion("goal_in not in", values, "goalIn");
            return (Criteria) this;
        }

        public Criteria andGoalInBetween(Integer value1, Integer value2) {
            addCriterion("goal_in between", value1, value2, "goalIn");
            return (Criteria) this;
        }

        public Criteria andGoalInNotBetween(Integer value1, Integer value2) {
            addCriterion("goal_in not between", value1, value2, "goalIn");
            return (Criteria) this;
        }

        public Criteria andGoalOutIsNull() {
            addCriterion("goal_out is null");
            return (Criteria) this;
        }

        public Criteria andGoalOutIsNotNull() {
            addCriterion("goal_out is not null");
            return (Criteria) this;
        }

        public Criteria andGoalOutEqualTo(Integer value) {
            addCriterion("goal_out =", value, "goalOut");
            return (Criteria) this;
        }

        public Criteria andGoalOutNotEqualTo(Integer value) {
            addCriterion("goal_out <>", value, "goalOut");
            return (Criteria) this;
        }

        public Criteria andGoalOutGreaterThan(Integer value) {
            addCriterion("goal_out >", value, "goalOut");
            return (Criteria) this;
        }

        public Criteria andGoalOutGreaterThanOrEqualTo(Integer value) {
            addCriterion("goal_out >=", value, "goalOut");
            return (Criteria) this;
        }

        public Criteria andGoalOutLessThan(Integer value) {
            addCriterion("goal_out <", value, "goalOut");
            return (Criteria) this;
        }

        public Criteria andGoalOutLessThanOrEqualTo(Integer value) {
            addCriterion("goal_out <=", value, "goalOut");
            return (Criteria) this;
        }

        public Criteria andGoalOutIn(List<Integer> values) {
            addCriterion("goal_out in", values, "goalOut");
            return (Criteria) this;
        }

        public Criteria andGoalOutNotIn(List<Integer> values) {
            addCriterion("goal_out not in", values, "goalOut");
            return (Criteria) this;
        }

        public Criteria andGoalOutBetween(Integer value1, Integer value2) {
            addCriterion("goal_out between", value1, value2, "goalOut");
            return (Criteria) this;
        }

        public Criteria andGoalOutNotBetween(Integer value1, Integer value2) {
            addCriterion("goal_out not between", value1, value2, "goalOut");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeIsNull() {
            addCriterion("last_update_time is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeIsNotNull() {
            addCriterion("last_update_time is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeEqualTo(Date value) {
            addCriterion("last_update_time =", value, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeNotEqualTo(Date value) {
            addCriterion("last_update_time <>", value, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeGreaterThan(Date value) {
            addCriterion("last_update_time >", value, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("last_update_time >=", value, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeLessThan(Date value) {
            addCriterion("last_update_time <", value, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("last_update_time <=", value, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeIn(List<Date> values) {
            addCriterion("last_update_time in", values, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeNotIn(List<Date> values) {
            addCriterion("last_update_time not in", values, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("last_update_time between", value1, value2, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("last_update_time not between", value1, value2, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andStatIsNull() {
            addCriterion("stat is null");
            return (Criteria) this;
        }

        public Criteria andStatIsNotNull() {
            addCriterion("stat is not null");
            return (Criteria) this;
        }

        public Criteria andStatEqualTo(Integer value) {
            addCriterion("stat =", value, "stat");
            return (Criteria) this;
        }

        public Criteria andStatNotEqualTo(Integer value) {
            addCriterion("stat <>", value, "stat");
            return (Criteria) this;
        }

        public Criteria andStatGreaterThan(Integer value) {
            addCriterion("stat >", value, "stat");
            return (Criteria) this;
        }

        public Criteria andStatGreaterThanOrEqualTo(Integer value) {
            addCriterion("stat >=", value, "stat");
            return (Criteria) this;
        }

        public Criteria andStatLessThan(Integer value) {
            addCriterion("stat <", value, "stat");
            return (Criteria) this;
        }

        public Criteria andStatLessThanOrEqualTo(Integer value) {
            addCriterion("stat <=", value, "stat");
            return (Criteria) this;
        }

        public Criteria andStatIn(List<Integer> values) {
            addCriterion("stat in", values, "stat");
            return (Criteria) this;
        }

        public Criteria andStatNotIn(List<Integer> values) {
            addCriterion("stat not in", values, "stat");
            return (Criteria) this;
        }

        public Criteria andStatBetween(Integer value1, Integer value2) {
            addCriterion("stat between", value1, value2, "stat");
            return (Criteria) this;
        }

        public Criteria andStatNotBetween(Integer value1, Integer value2) {
            addCriterion("stat not between", value1, value2, "stat");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sst_competition_team
     *
     * @mbggenerated do_not_delete_during_merge Mon Feb 01 11:07:44 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sst_competition_team
     *
     * @mbggenerated Mon Feb 01 11:07:44 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}